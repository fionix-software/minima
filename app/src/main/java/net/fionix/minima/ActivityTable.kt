package net.fionix.minima

import android.graphics.Bitmap
import android.graphics.Canvas
import android.os.Bundle
import android.os.Environment
import android.view.View
import android.webkit.WebView
import android.widget.Button
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import net.fionix.minima.model.ClassMinima
import java.io.File
import java.io.FileOutputStream
import java.text.SimpleDateFormat
import java.util.*

class ActivityTable : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_table)
        val webView = findViewById<View>(R.id.webView1) as WebView
        webView.settings.displayZoomControls = false
        webView.settings.builtInZoomControls = true
        webView.settings.useWideViewPort = true
        webView.setInitialScale(1)
        val arrayListTimetable = ClassMinima.loadTimetable(applicationContext)
        val arrayListCourse = ClassMinima.loadCourse(applicationContext)
        val htmlHeader = "<!DOCTYPE html><html><head><meta charset=\"utf-8\"><title></title></head><body style=\"width: 1360px; padding: 50px;\"><style media=\"screen\">table,th,td {text-align: center;border: 1px solid black;border-collapse: collapse;}td {width: 120px;height: 75px;}th {height: 50px;}</style><table><tr style=\"background: rgb(211,211,211)\"><th width=\"200px;\">Day</th><th colspan=\"2\">8.00am - 9.00am</th><th colspan=\"2\">9.00am - 10.00am</th><th colspan=\"2\">10.00am - 11.00am</th><th colspan=\"2\">11.00am - 12.00pm</th><th colspan=\"2\">12.00pm - 1.00pm</th><th colspan=\"2\">1.00pm - 2.00pm</th><th colspan=\"2\">2.00pm - 3.00pm</th><th colspan=\"2\">3.00pm - 4.00pm</th><th colspan=\"2\">4.00pm - 5.00pm</th><th colspan=\"2\">5.00pm - 6.00pm</th><th colspan=\"2\">6.00pm - 7.00pm</th><th colspan=\"2\">7.00pm - 8.00pm</th><th colspan=\"2\">8.00pm - 9.00pm</th><th colspan=\"2\">9.00pm - 10.00pm</th><th colspan=\"2\">10.00pm - 11.00pm</th></tr>"
        val htmlMonday = ClassMinima.generateTable("Monday", arrayListTimetable)
        val htmlTuesday = ClassMinima.generateTable("Tuesday", arrayListTimetable)
        val htmlWednesday = ClassMinima.generateTable("Wednesday", arrayListTimetable)
        val htmlThursday = ClassMinima.generateTable("Thursday", arrayListTimetable)
        val htmlFriday = ClassMinima.generateTable("Friday", arrayListTimetable)
        val htmlSaturday = ClassMinima.generateTable("Saturday", arrayListTimetable)
        val htmlSunday = ClassMinima.generateTable("Sunday", arrayListTimetable)
        val htmlHidden = "<tr><td colspan=\"31\" style=\"text-align: center; height:30px;\"><strong>Timetable generated by Minima</strong></td></tr><tr style=\"visibility:hidden;\"><td>Hidden</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></table>"
        val htmlCourse = ClassMinima.generateCourseList(arrayListCourse)
        val htmlFooter = "</body></html>"
        val html = htmlHeader + htmlMonday + htmlTuesday + htmlWednesday + htmlThursday + htmlFriday + htmlSaturday + htmlSunday + htmlHidden + htmlCourse + htmlFooter
        Toast.makeText(applicationContext, "You can zoom by pinch in or out", Toast.LENGTH_SHORT).show()
        webView.loadData(html, "text/html", "UTF-8")
        val buttonSaveAs = findViewById<View>(R.id.button1) as Button
        buttonSaveAs.setOnClickListener { // generate png
            val bitmap = Bitmap.createBitmap(webView.width, 720, Bitmap.Config.ARGB_8888)
            val canvas = Canvas(bitmap)
            webView.draw(canvas)

            // check for folder existence
            val folder = File(Environment.getExternalStorageDirectory().toString() + "/Minima")
            if (!folder.exists()) {
                folder.mkdir()
            }

            // generate png file
            val outputStream: FileOutputStream
            try {
                val location = Environment.getExternalStorageDirectory().toString() + "/Minima/minima_timetable_" + SimpleDateFormat("yyyy_MM_dd_HH_mm_ss").format(Date()) + ".png"
                val file = File(Environment.getExternalStorageDirectory().toString() + "/Minima/", "minima_timetable_" + SimpleDateFormat("yyyy_MM_dd_HH_mm_ss").format(Date()) + ".png")
                outputStream = FileOutputStream(file)
                bitmap.compress(Bitmap.CompressFormat.PNG, 100, outputStream)
                outputStream.close()
                Toast.makeText(applicationContext, "Image saved at: $location", Toast.LENGTH_SHORT).show()
            } catch (e: Exception) {
                e.printStackTrace()
            }
        }
    }
}